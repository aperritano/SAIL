{"version":3,"sources":["drawAuthoringController.spec.es6"],"names":["describe","$controller","$rootScope","$scope","drawAuthoringController","component","beforeEach","angular","mock","module","mainModule","name","inject","_$controller_","_$rootScope_","$new","componentContent","JSON","parse","stringify","authoringComponentContent","nodeId","it","componentId","expect","background","toEqual","spyOn","and","callFake","event","args","target","assetItem","fileName","assetSelected","stamps","Stamps","authoringMoveStampUp","authoringMoveStampDown"],"mappings":"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","file":"drawAuthoringController.spec.js","sourcesContent":["import angular from 'angular';\nimport mainModule from 'authoringTool/main';\nimport 'angular-mocks';\n\ndescribe('DrawAuthoringController', () => {\n\n  let $controller;\n  let $rootScope;\n  let $scope;\n  let drawAuthoringController;\n  let component;\n\n  beforeEach(angular.mock.module(mainModule.name));\n\n  beforeEach(inject((_$controller_, _$rootScope_) => {\n    $controller = _$controller_;\n    $rootScope = _$rootScope_;\n    component = {\n      'id': '6ib04ymmi8',\n      'type': 'Draw',\n      'prompt': 'Draw your favorite thing.',\n      'showSaveButton': false,\n      'showSubmitButton': false,\n      'stamps': {\n        'Stamps': [\n          'carbon.png',\n          'oxygen.png'\n        ]\n      },\n      'tools': {\n        'select': true,\n        'line': true,\n        'shape': true,\n        'freeHand': true,\n        'text': true,\n        'stamp': true,\n        'strokeColor': true,\n        'fillColor': true,\n        'clone': true,\n        'strokeWidth': true,\n        'sendBack': true,\n        'sendForward': true,\n        'undo': true,\n        'redo': true,\n        'delete': true\n      },\n      'showAddToNotebookButton': true,\n      'background': 'background.png'\n    };\n    $scope = $rootScope.$new();\n    $scope.componentContent = JSON.parse(JSON.stringify(component));\n    $scope.authoringComponentContent = JSON.parse(JSON.stringify(component));\n    drawAuthoringController = $controller('DrawAuthoringController', { $scope: $scope });\n    drawAuthoringController.nodeId = 'node1';\n  }));\n\n  it('should select the background image', () => {\n    drawAuthoringController.nodeId = 'node1';\n    drawAuthoringController.componentId = 'component1';\n    expect(drawAuthoringController.authoringComponentContent.background).toEqual('background.png');\n    spyOn(drawAuthoringController, 'authoringViewComponentChanged').and.callFake(() => {});\n    const event = {};\n    const args = {\n      nodeId: 'node1',\n      componentId: 'component1',\n      target: 'background',\n      assetItem: {\n        fileName: 'new_background.png'\n      }\n    };\n    drawAuthoringController.assetSelected(event, args);\n    expect(drawAuthoringController.authoringComponentContent.background).toEqual('new_background.png');\n  });\n\n  it('should move a stamp up', () => {\n    expect(drawAuthoringController.authoringComponentContent.stamps.Stamps[0]).toEqual('carbon.png');\n    expect(drawAuthoringController.authoringComponentContent.stamps.Stamps[1]).toEqual('oxygen.png');\n    spyOn(drawAuthoringController, 'authoringViewComponentChanged').and.callFake(() => {});\n    drawAuthoringController.authoringMoveStampUp(1);\n    expect(drawAuthoringController.authoringComponentContent.stamps.Stamps[0]).toEqual('oxygen.png');\n    expect(drawAuthoringController.authoringComponentContent.stamps.Stamps[1]).toEqual('carbon.png');\n  });\n\n  it('should move a stamp down', () => {\n    expect(drawAuthoringController.authoringComponentContent.stamps.Stamps[0]).toEqual('carbon.png');\n    expect(drawAuthoringController.authoringComponentContent.stamps.Stamps[1]).toEqual('oxygen.png');\n    spyOn(drawAuthoringController, 'authoringViewComponentChanged').and.callFake(() => {});\n    drawAuthoringController.authoringMoveStampDown(0);\n    expect(drawAuthoringController.authoringComponentContent.stamps.Stamps[0]).toEqual('oxygen.png');\n    expect(drawAuthoringController.authoringComponentContent.stamps.Stamps[1]).toEqual('carbon.png');\n  });\n\n});\n"]}